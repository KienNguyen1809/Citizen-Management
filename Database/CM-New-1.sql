CREATE DATABASE CITIZENMANAGEMENT2017
ON PRIMARY
(
	NAME = CMM,
	FILENAME = 'D:\CNTT\Visual Studio\Projects\CitizentManagerment\db\CM.MDF',
	SIZE = 50MB , 
	MAXSIZE = 100MB , 
	FILEGROWTH = 5MB
)
LOG ON
(
	NAME = CML,
	FILENAME = 'D:\CNTT\Visual Studio\Projects\CitizentManagerment\db\CML.MDF',
	SIZE = 20MB , 
	MAXSIZE = 50MB , 
	FILEGROWTH = 5MB
)
--======================================================================================================================
--GIAM DOC QUAN LY CO MOI QUYEN THUC THI VA QUAN LY NHAN VIEN
CREATE TABLE ADMINLG
(
	ADMINCODE VARCHAR(30) NOT NULL PRIMARY KEY ,
	PASSWORDAD VARCHAR(30)
)

INSERT INTO ADMINLG VALUES('VIETNGUYEN','1111')
INSERT INTO ADMINLG VALUES('SIMNGUYEN','1111')
INSERT INTO ADMINLG VALUES('LINHNGUYEN','1111')
INSERT INTO ADMINLG VALUES('KIENNGUYEN','1111')

SELECT * FROM ADMINLG
SELECT * FROM MANAGER

--------------===================================================
--QUAN LY KHU VUC 

CREATE TABLE AREA
(
	ARCODE VARCHAR(20) NOT NULL PRIMARY KEY ,
	ARNAME VARCHAR(30) UNIQUE ,
	ARPOPULATION INT
)

CREATE PROC ADDAREA
(
	@ARCODE VARCHAR(20),
	@ARNAME VARCHAR(30) ,
	@ARPOPULATION INT
)
AS 
BEGIN
INSERT INTO AREA VALUES(@ARCODE , @ARNAME , @ARPOPULATION)
END

SELECT * FROM AREA

EXEC ADDAREA 'HK' , 'HOAN KIEM' , '' 

EXEC ADDAREA 'DD' , 'DONG DA' , '' 

EXEC ADDAREA 'BD' , 'BA DINH' , '' 

EXEC ADDAREA 'TX' , 'THANH XUAN' , '' 
 
-- SUA THONG TIN KHU VUC

CREATE PROC EDITAREA
(
	@ARCODE VARCHAR(20),
	@ARNAME VARCHAR(30) ,
	@ARPOPULATION INT
)
AS
BEGIN
UPDATE AREA SET ARNAME = @ARNAME , ARPOPULATION = @ARPOPULATION WHERE ARCODE = @ARCODE
END

EXEC EDITAREA '2' , 'DONG DA' , ''

----------------------------------------------------------------------
CREATE TRIGGER ATPL
ON CITIZEN
FOR INSERT
AS
BEGIN
DECLARE 
END

--=======================================================================================================================
--THEM NHAN VIEN MOI

CREATE PROC ADDMN
(
@MNCODE VARCHAR(30),
@MNNAME VARCHAR(30) ,
@SEX VARCHAR(10) ,
@BIRTH DATE ,
@HOMETOWN VARCHAR(100) ,
@MNPOSITION VARCHAR(30) ,
@MNPASSWORD VARCHAR(30),
@ADMINCODE VARCHAR(30), 
@ARCODE VARCHAR(20) 
)
AS
BEGIN
INSERT INTO MANAGER VALUES(@MNCODE , @MNNAME , @SEX , @BIRTH , @HOMETOWN , @MNPOSITION ,@MNPASSWORD, @ADMINCODE, @ARCODE)
END

EXEC ADDMN 'UH1','BINHAN','MALE','7/8/1991' , 'HANOI','NHANVIEN','BINHMINH','VIETNGUYEN','HK'
EXEC ADDMN 'UH2','BINHMINH','FAMALE','7/8/1991' , 'HANOI','NHANVIEN','BINHMINH','VIETNGUYEN','HK'
EXEC ADDMN 'UH3','BINHMINH','MALE','7/8/1991' , 'HANOI','NHANVIEN','BINHMINH','VIETNGUYEN','HK'
EXEC ADDMN 'UH4','BINHMINH','FAMALE','7/8/1991' , 'HANOI','NHANVIEN','BINHMINH','VIETNGUYEN','DD'
EXEC ADDMN 'UH5','BINHMINH','FAMALE','7/8/1991' , 'HANOI','NHANVIEN','BINHMINH','VIETNGUYEN','DD'
EXEC ADDMN 'UH6','BINHMINH','MALE','7/8/1991' , 'HANOI','NHANVIEN','BINHMINH','VIETNGUYEN','DD'
EXEC ADDMN 'UH7','BINHMINH','FAMALE','7/8/1991' , 'HANOI','NHANVIEN','BINHMINH','VIETNGUYEN','BD'
EXEC ADDMN 'UH8','BINHMINH','MALE','7/8/1991' , 'HANOI','NHANVIEN','BINHMINH','VIETNGUYEN','BD'
EXEC ADDMN 'UH9','BINHMINH','FAMALE','7/8/1991' , 'HANOI','NHANVIEN','BINHMINH','VIETNGUYEN','BD'
EXEC ADDMN 'UH10','BINHMINH','FAMALE','7/8/1991' , 'HANOI','NHANVIEN','BINHMINH','VIETNGUYEN','TX'
EXEC ADDMN 'UH11','BINHMINH','MALE','7/8/1991' , 'HANOI','NHANVIEN','BINHMINH','VIETNGUYEN','TX'
EXEC ADDMN 'UH12','BINHMINH','FAMALE','7/8/1991' , 'HANOI','NHANVIEN','BINHMINH','VIETNGUYEN','TX'

SELECT * FROM MANAGER

--SUA NHAN VIEN

CREATE PROC EDITMN
(
@MNCODE VARCHAR(30),
@MNNAME VARCHAR(30) ,
@SEX VARCHAR(10) ,
@BIRTH DATE ,
@HOMETOWN VARCHAR(100) ,
@MNPOSITION VARCHAR(30) ,
@MNPASSWORD VARCHAR(30),
@ADMINCODE VARCHAR(30),
@ARCODE VARCHAR(20) 
)
AS
UPDATE MANAGER SET MNNAME = @MNNAME ,SEX = @SEX ,BIRTH =  @BIRTH ,HOMETOWN = @HOMETOWN ,MNPOSITION= @MNPOSITION ,
						MNPASSWORD = @MNPASSWORD, ADMINCODE= @ADMINCODE , ARCODE = @ARCODE
				  WHERE MNCODE = @MNCODE

EXEC EDITMN 'UH1','MINHQUAN','FAMALE','9/8/1991' , 'HANOI','NHANVIEN','MINHQUAN','VIETNGUYEN','HK'

--XOA NHAN VIEN

CREATE PROC DELMN
(
@MNCODE VARCHAR(30)
)
AS
BEGIN
DELETE FROM MANAGER WHERE MNCODE = @MNCODE
END


SELECT * FROM ADMINLG
SELECT * FROM MANAGER

--==========================================================================================================================
--THUC THI MOI VIEC VE QUAN LY CONG DAN

--CREATE TABLE MNLOGIN
--(
--	MNCODE VARCHAR(30) ,
--	MNPASS VARCHAR(30) ,
--	FOREIGN KEY (MNCODE) REFERENCES MANAGER(MNCODE)
--)

--CREATE TRIGGER ATADDMN
--ON MNLOGIN
--FOR INSERT
--AS
--BEGIN
--	DECLARE @MNCODE VARCHAR(30)  = (SELECT MNCODE FROM inserted)
--		BEGIN
--			INSERT INTO MNLOGIN VALUES(@MNCODE , '123456')
--		END
--END

-- DA THEM MNPASSWORD VAO DAY 

CREATE TABLE MANAGER
(
	MNCODE VARCHAR(30) NOT NULL PRIMARY KEY ,
	MNNAME VARCHAR(30) ,
	SEX VARCHAR(10) CONSTRAINT SEX CHECK(SEX = 'MALE' OR SEX = 'FAMALE') ,
	BIRTH DATE ,
	HOMETOWN VARCHAR(100) ,
	MNPOSITION VARCHAR(30) ,
	MNPASSWORD VARCHAR(30),
	ADMINCODE VARCHAR(30) ,
	ARCODE VARCHAR(20) , 
	FOREIGN KEY (ARCODE) REFERENCES AREA(ARCODE),
	FOREIGN KEY (ADMINCODE) REFERENCES ADMINLG(ADMINCODE)
)

SELECT * FROM MANAGER

--INSERT INTO MANAGER VALUES('VN1','QUAN NGUYEN','FAMALE','','','')

--TIM KIEM NHAN VIEN

CREATE PROC SEARCHMN
(
@KEYSEARCH VARCHAR(30) 
)
AS
BEGIN
SELECT * FROM MANAGER 
WHERE MNCODE LIKE '%' + @KEYSEARCH + '%' 
OR MNNAME LIKE '%' + @KEYSEARCH + '%' 
OR MNPOSITION LIKE '%' + @KEYSEARCH + '%' 
END


--============================================================================================================================
--TIM KIEM HO KHAU CONG DAN

CREATE PROC SEARCHFR
(
@KEYSEARCH VARCHAR(30)
)
AS
BEGIN
SELECT * FROM FAMILYREGISTER
WHERE 
FRNAME LIKE '%' + @KEYSEARCH + '%' 
OR FRCODE LIKE '%' + @KEYSEARCH + '%' 
END

--THEM SO HO KHAU

CREATE PROC ADDFR
(
@FRCODE VARCHAR(20) ,
@FRNAME VARCHAR(50),
@NUMMENBER INT ,
@ARCODE VARCHAR(20)
) 
AS
BEGIN
INSERT INTO FAMILYREGISTER VALUES(@FRCODE , @FRNAME ,@NUMMENBER, @ARCODE)
END

SELECT * FROM FAMILYREGISTER

EXEC ADDFR 'FR71','NGUYEN VAN HUNG','','BD'
EXEC ADDFR 'FR72','NGUYEN THI HUONG','','BD'
EXEC ADDFR 'FR73','LE THI NHI','','BD'
EXEC ADDFR 'FR74','DAO VAN DUC','','BD'
EXEC ADDFR 'FR75','NGO VAN HA','','BD'

EXEC ADDFR 'FR76','NGUYEN DUY SIM','','BD'
EXEC ADDFR 'FR77','NGUYEN VAN MINH','','BD'
EXEC ADDFR 'FR78','NGUYEN BINH AN','','BD'
EXEC ADDFR 'FR79','NGUYEN ANH','','BD'
EXEC ADDFR 'FR80','NGUYEN HUNG','','BD'

EXEC ADDFR 'FR21','LE HUNG','','TX'
EXEC ADDFR 'FR32','TRAN VAN HUNG','','TX'
EXEC ADDFR 'FR33','DANG VAN HUNG','','TX'
EXEC ADDFR 'FR34','HO THI HUONG','','TX'
EXEC ADDFR 'FR35','LE DUY HUNG','','TX'

EXEC ADDFR 'FR36','NGUYEN VAN MANH','','TX'
EXEC ADDFR 'FR37','NGUYEN DUC KIEM','','TX'
EXEC ADDFR 'FR38','NGUYEN VAN AN','','TX'
EXEC ADDFR 'FR39','NGUYEN DUY HOA','','TX' 
EXEC ADDFR 'FR40','NGUYEN LE HUNG','','TX'






--SUA SO HO KHAU
CREATE PROC EDITFR
(
@FRCODE VARCHAR(20) ,
@FRNAME VARCHAR(50),
@NUMMEMBER INT , 
@ARCODE VARCHAR(20)
)
AS
UPDATE FAMILYREGISTER SET  FRNAME =@FRNAME , NUMMENBER = @NUMMEMBER , ARCODE = @ARCODE WHERE FRCODE = @FRCODE


--XOA SO HO KHAU
--CREATE PROC DELFR
--(
--@FRCODE VARCHAR(20) 
--)
--AS 
--BEGIN
----------XOA HET THANH VIEN TRONG GD
--DELETE FROM FRCODE WHERE FRCODE = @FRCODE
--END

--QUAN LY SO HO KHAU 

CREATE TABLE FAMILYREGISTER
(
	FRCODE VARCHAR(20) NOT NULL PRIMARY KEY ,
	FRNAME VARCHAR(50) ,
	NUMMENBER INT ,
	ARCODE VARCHAR(20) ,
	FOREIGN KEY (ARCODE) REFERENCES AREA(ARCODE)
)

SELECT * FROM FAMILYREGISTER
--============================================================================================================================

--THEM CONG DAN
CREATE PROC ADDCZ
(
	@CZCODE VARCHAR(15) ,
	@CZNAME VARCHAR(50) ,
	@CZSEX VARCHAR(10)  ,	
	@CZBIRTH DATE ,
	@CZADRESS VARCHAR(100),
	@POSITION VARCHAR(30),
	@FRCODE VARCHAR(20)
)
AS
BEGIN
INSERT INTO CITIZEN VALUES (@CZCODE ,@CZNAME , @CZSEX , @CZBIRTH,@CZADRESS ,
							@POSITION, @FRCODE)
END



SELECT * FROM FAMILYREGISTER

EXEC ADDCZ 'FR72-1','NGUYEN VAN CONG' , 'MALE' , '2/26/1956','54A-NGOC HA','STUDENT','FR72'
EXEC ADDCZ 'FR72-2','NGUYEN THI MINH' , 'FAMALE' , '12/26/1959','54A-NGOC HA','STUDENT','FR72'
EXEC ADDCZ 'FR72-3','NGUYEN THI HA' , 'FAMALE' , '3/2/1996','54A-NGOC HA','STUDENT','FR72'
EXEC ADDCZ 'FR72-4','NGUYEN NGOC ANH' , 'FAMALE' , '2/20/2000','54A-NGOC HA','STUDENT','FR72'

--SUA CONG DAN
SELECT * FROM CITIZEN

CREATE PROC EDITCZ
(
	@CZCODE VARCHAR(15) ,
	@CZNAME VARCHAR(50) ,
	@CZSEX VARCHAR(10)  ,	
	@CZBIRTH DATE ,
	@CZADRESS VARCHAR(100),
	@POSITION VARCHAR(30),
	@FRCODE VARCHAR(20)
)
AS
UPDATE CITIZEN SET CZNAME = @CZNAME , CZSEX = @CZSEX , CZBIRTH = @CZBIRTH , CZADDRESS = @CZADRESS ,
					POSITION = @POSITION ,FRCODE = @FRCODE WHERE CZCODE = @CZCODE
					 

--XOA CONG DAN
CREATE PROC DELCZ
(
@CZCODE VARCHAR(15)
)
AS
BEGIN
-----XOA HET THONG TIN---
DELETE FROM CITIZEN WHERE CZCODE=@CZCODE
END



--THONG TIN CONG DAN
CREATE TABLE CITIZEN  --  CERTIFICATEOFBIRTH  --
(
	CZCODE VARCHAR(15) NOT NULL PRIMARY KEY ,
	CZNAME VARCHAR(50) ,
	CZSEX VARCHAR(10) CONSTRAINT CZSEX CHECK(CZSEX = 'MALE' OR CZSEX = 'FAMALE') ,	
	CZBIRTH DATE ,
	CZADDRESS VARCHAR(100),
	POSITION VARCHAR(30),
	FRCODE VARCHAR(20),
	FOREIGN KEY (FRCODE) REFERENCES FAMILYREGISTER(FRCODE)	
)

--TIM KIEM CONG DAN
CREATE PROC SEARCH
(
@KEYSEARCH VARCHAR(30)
)
AS
BEGIN
SELECT * FROM CITIZEN 
WHERE 
CZNAME LIKE '%' + @KEYSEARCH + '%' 
OR CZCODE LIKE '%' + @KEYSEARCH + '%'
OR FRCODE LIKE '%' + @KEYSEARCH + '%'
OR POSITION LIKE '%' + @KEYSEARCH + '%' 
END

EXEC SEARCH 'NG'

SELECT * FROM CITIZEN

SELECT * FROM INSURANCE
--========================================================================================================================
--CAC LOAI BAO HIEM
CREATE TABLE INSURANCE
(
	ISCODE VARCHAR(15) NOT NULL PRIMARY KEY,
	ISNAME VARCHAR(50) UNIQUE ,
	PRICE INT CONSTRAINT PRICE CHECK (PRICE >= 0) ,
	ISTERMINABLE INT CONSTRAINT ISTERMINABLE CHECK(ISTERMINABLE > 0)
)


--TIM KIEM CONG DAN
CREATE PROC SEARCHIS
(
@KEYSEARCH VARCHAR(30)
)
AS
BEGIN
SELECT * FROM INSURANCE
WHERE 
ISCODE LIKE '%' + @KEYSEARCH + '%' 
OR ISNAME LIKE '%' + @KEYSEARCH + '%'
END

--THEM BAO HIEM
CREATE PROC ADDIS
(
@ISCODE VARCHAR(30) ,
@ISNAME VARCHAR(30) ,
@PRICE INT ,
@ISTERMINABLE INT 
)
AS
BEGIN
INSERT INTO INSURANCE VALUES(@ISCODE , @ISNAME , @PRICE , @ISTERMINABLE)
END

EXEC ADDIS 'IS1','MANULIFE' , 1000 , 365 --365 NGAY -- 1 TRIEU
EXEC ADDIS 'IS2','THAN THE' , 250 , 365
EXEC ADDIS 'IS3','Y TE' , 630 , 365
EXEC ADDIS 'IS4','XE MAY' , 2000 , 730
EXEC ADDIS 'IS5','O TO' , 3000 , 730

EXEC ADDIS 'IS6','' , 1000 , 365
EXEC ADDIS 'IS7','MANULIFE' , 1000 , 365
EXEC ADDIS 'IS8','MANULIFE' , 1000 , 365
EXEC ADDIS 'IS9','MANULIFE' , 1000 , 365

--SUA BAO HIEM
CREATE PROC EDITIS
(
@ISCODE VARCHAR(30) ,
@ISNAME VARCHAR(30) ,
@PRICE INT ,
@ISTERMINABLE INT 
)
AS
UPDATE INSURANCE SET ISNAME=@ISNAME , PRICE=@PRICE , ISTERMINABLE=@ISTERMINABLE WHERE ISCODE=@ISCODE

--XOA BAO HIEM
CREATE PROC DELIS
(
@ISCODE VARCHAR(30)
)
AS
BEGIN
DELETE FROM INSURANCE WHERE ISCODE=@ISCODE
END



--==============================================================================================================================
--BAO HIEM CHO CONG DAN
CREATE TABLE CZ_IS
(
	ISCODE VARCHAR(15) ,
	CZCODE VARCHAR(15),
	ISSTARTIME DATE ,
	ISENDTIME DATE ,
	FOREIGN KEY (CZCODE) REFERENCES CITIZEN(CZCODE)	,	
	FOREIGN KEY (ISCODE) REFERENCES INSURANCE(ISCODE)	
)

CREATE TRIGGER NOADDIS
ON CZ_IS
FOR INSERT
AS
BEGIN
DECLARE @CZCODE VARCHAR(15) = (SELECT CZCODE FROM inserted)
DECLARE @ISCODE VARCHAR(30) = (SELECT ISCODE FROM inserted)
	IF not EXISTS (SELECT @CZCODE FROM CZ_IS  WHERE ISCODE = @ISCODE )
		BEGIN
		PRINT 'ALREADY EXISTS'
		ROLLBACK TRAN
		END
END

SELECT * FROM CZ_IS

select distinct ISCODE , CZCODE , ISENDTIME , ISSTARTIME from CZ_IS  

INSERT INTO CZ_IS VALUES('IS1','VN1' , '','')

CREATE TRIGGER ATIS
ON CZ_IS
FOR INSERT , UPDATE
AS
BEGIN
DECLARE @ISCODE VARCHAR(15) = (SELECT ISCODE FROM inserted)
DECLARE @ISTER INT = (SELECT ISTERMINABLE FROM INSURANCE WHERE ISCODE=@ISCODE )
DECLARE @CZCODE VARCHAR(15) = (SELECT CZCODE FROM inserted )
DECLARE @ISTIME DATE = (SELECT GETDATE())
DECLARE @ISTIMEE DATE = (SELECT DATEADD(D , @ISTER , @ISTIME))
UPDATE CZ_IS SET ISSTARTIME =  @ISTIME , ISENDTIME = @ISTIMEE WHERE CZCODE = @CZCODE AND ISCODE = @ISCODE 
----insert into CZ_IS values(@ISCODE , @CZCODE ,GETDATE(),@ISTIMEE)
END

INSERT INTO CZ_IS VALUES('IS2','VN1' , '','')


SELECT GETDATE()
SELECT * FROM INSURANCE
SELECT * FROM CITIZEN
select distinct * from CZ_IS
INSERT INTO CZ_IS VALUES('IS2' , 'VN3' , GETDATE(),'')


SELECT DATEADD(D , 730 ,GETDATE())

--TIM KIEM
CREATE PROC SEARCHCI
(
@KEYSEARCH VARCHAR(30)
)
AS
BEGIN
SELECT * FROM CZ_IS
WHERE 
ISCODE LIKE '%' + @KEYSEARCH + '%' 
OR CZCODE LIKE '%' + @KEYSEARCH + '%'
END


--THEM BAO HIEM CHO CONG DAN

CREATE PROC ADDSCIS
(
	@ISCODE VARCHAR(15) ,
	@CZCODE VARCHAR(15),
	@ISSTARTIME DATE ,
	@ISENDTIME DATE 
)
AS
BEGIN
INSERT INTO CZ_IS VALUES(@ISCODE , @CZCODE , @ISSTARTIME , @ISENDTIME)
END

SELECT * FROM INSURANCE
SELECT * FROM CITIZEN
SELECT * FROM CZ_IS
EXEC ADDSCIS 'IS2','VN3','',''
 
 ---SUA BAO HIEM CHO CONG DAN
CREATE PROC EDITSCIS
(
	@ISCODE VARCHAR(15) ,
	@CZCODE VARCHAR(15),
	@ISSTARTIME DATE ,
	@ISENDTIME DATE 
)
AS
UPDATE CZ_IS SET CZCODE= @CZCODE , ISSTARTIME=@ISSTARTIME ,ISENDTIME= @ISENDTIME

--XOA
CREATE PROC DELSCIS
(
@CZCODE VARCHAR(15)
)
AS
BEGIN
DELETE FROM CZ_IS WHERE CZCODE=@CZCODE
END

--===============================================================================================================================

--CAC LOAI GIAY PHEP LAI XE VA TUOI TREN 18
CREATE TABLE LICENSEDRIVE
(
	LDCODE VARCHAR(30) NOT NULL PRIMARY KEY ,
	LDNAME VARCHAR(50) UNIQUE ,
	LDTERMINABLE INT CONSTRAINT LDTERMINABLE CHECK(LDTERMINABLE > 0) ,
)

SELECT * FROM LICENSEDRIVE
--TIM KIEM
CREATE PROC SEARCHLD
(
@KEYSEARCH VARCHAR(30)
)
AS
BEGIN
SELECT * FROM LICENSEDRIVE
WHERE 
LDCODE LIKE '%' + @KEYSEARCH + '%' 
OR LDNAME LIKE '%' + @KEYSEARCH + '%'
END

--THEM LOAI BANG LAI XE
CREATE PROC ADDLD
(
@LDCODE VARCHAR(30) ,
@LDNAME VARCHAR(50),
@LDTM INT
)
AS
BEGIN
INSERT INTO LICENSEDRIVE VALUES(@LDCODE , @LDNAME , @LDTM)
END

EXEC ADDLD 'B2' , 'CAR', '1000'

--SUA 
CREATE PROC EDITLD
(
@LDCODE VARCHAR(30) ,
@LDNAME VARCHAR(50),
@LDTM INT
)
AS
UPDATE LICENSEDRIVE SET LDCODE=@LDCODE , LDNAME = @LDNAME , LDTERMINABLE =@LDTM

--XOA
CREATE PROC DELLD
(
@LDCODE VARCHAR(30)
)
AS
BEGIN
DELETE FROM LICENSEDRIVE WHERE LDCODE=@LDCODE
END

--=========================================================================================================================
--THEM BANG LAI XE CHO CONG DAN
CREATE TABLE CZ_LD
(
	CZCODE VARCHAR(15),
	LDCODE VARCHAR(30),
	LDSTARTIME DATE ,
	LDENDTIME DATE ,
	FOREIGN KEY (CZCODE) REFERENCES CITIZEN(CZCODE)	,
	FOREIGN KEY (LDCODE) REFERENCES LICENSEDRIVE(LDCODE)	
)

CREATE TRIGGER ATLD
ON CZ_LD
FOR INSERT , UPDATE
AS
BEGIN
DECLARE @LDCODE VARCHAR(15) = (SELECT LDCODE FROM inserted)
DECLARE @LDTER INT = (SELECT LDTERMINABLE FROM LICENSEDRIVE WHERE LDCODE=@LDCODE )
DECLARE @CZCODE VARCHAR(15) = (SELECT CZCODE FROM inserted )
DECLARE @LDTIME DATE = (SELECT GETDATE())
DECLARE @LDTIMEE DATE = (SELECT DATEADD(D , @LDTER , @LDTIME))
UPDATE CZ_LD SET LDSTARTIME =  @LDTIME , LDENDTIME = @LDTIMEE WHERE CZCODE = @CZCODE AND LDCODE = @LDCODE 
END


SELECT * FROM LICENSEDRIVE
SELECT * FROM CITIZEN
INSERT INTO CZ_LD VALUES ('VN4' , 'B2' , '' ,'')

--KHONG CHO THEM BANG NEU < 18 THUOI
CREATE TRIGGER NOTADD
ON CZ_LD 
FOR INSERT 
AS
BEGIN
	IF not EXISTS ( SELECT * FROM inserted AS I INNER JOIN CITIZEN AS C ON I.CZCODE = C.CZCODE 
																	WHERE YEAR(GETDATE()) - YEAR(CZBIRTH) < 18 )
	BEGIN
		PRINT 'AGE >= 18' 
		ROLLBACK TRAN
	END
END	

CREATE TRIGGER NOADDLD
ON CZ_LD
FOR INSERT
AS
BEGIN
DECLARE @CZCODE VARCHAR(15) = (SELECT CZCODE FROM inserted)
DECLARE @LDCODE VARCHAR(30) = (SELECT LDCODE FROM inserted)
	IF EXISTS (SELECT @LDCODE FROM CZ_LD  WHERE CZCODE= @CZCODE )
		BEGIN
		PRINT 'ALREADY EXISTS'
		ROLLBACK TRAN
		END
END

SELECT * FROM CZ_LD
SELECT * FROM LICENSEDRIVE
SELECT * FROM CITIZEN

INSERT INTO CZ_LD VALUES('VN6','B2','','')



------
--TIM KIEM
CREATE PROC SEARCHCL
(
@KEYSEARCH VARCHAR(30)
)
AS
BEGIN
SELECT * FROM CZ_LD
WHERE 
CZCODE LIKE '%' + @KEYSEARCH + '%' 
OR LDCODE LIKE '%' + @KEYSEARCH + '%'
END

--THEM
CREATE PROC ADDCZLD
(
	@CZCODE VARCHAR(15),
	@LDCODE VARCHAR(30),
	@LDSTARTIME DATE ,
	@LDENDTIME DATE 
)
AS
BEGIN
INSERT INTO CZ_LD VALUES(@CZCODE , @LDCODE , @LDSTARTIME ,@LDENDTIME)
END

SELECT * FROM LICENSEDRIVE
SELECT * FROM CITIZEN

EXEC ADDCZLD 'VN1' , 'B2' , '11/18/2016','11/18/2022'
--SUA
CREATE PROC EDITCZLD
(
	@CZCODE VARCHAR(15),
	@LDCODE VARCHAR(30),
	@LDSTARTIME DATE ,
	@LDENDTIME DATE 
)
AS
BEGIN
UPDATE CZ_LD SET CZCODE=@CZCODE , LDCODE=@LDCODE , LDSTARTIME=@LDSTARTIME , LDENDTIME=@LDENDTIME
END

--XOA
CREATE PROC DELCZLD
(
	@CZCODE VARCHAR(15)
)
AS
BEGIN
DELETE FROM CZ_LD WHERE CZCODE=@CZCODE
END

--===============================================================================================================
--HO CHIEU CONG DAN
CREATE TABLE PASSPORT
(
	PPCODE VARCHAR(30) NOT NULL PRIMARY KEY ,
	PPNAME VARCHAR(30) UNIQUE ,
	PPTERMINABLE INT CONSTRAINT PPTERMINABLE CHECK(PPTERMINABLE > 0), 	
)
--TIM KIEM
CREATE PROC SEARCHPP
(
@KEYSEARCH VARCHAR(30)
)
AS
BEGIN
SELECT * FROM PASSPORT
WHERE 
PPCODE LIKE '%' + @KEYSEARCH + '%' OR 
PPNAME LIKE '%' + @KEYSEARCH + '%'
END


--THEM HO CHIEU
CREATE PROC ADDPP
(
@PPCODE VARCHAR(30) ,
@PPNAME VARCHAR(30) ,
@PPTM INT
)
AS
BEGIN
INSERT INTO PASSPORT VALUES(@PPCODE , @PPNAME ,  @PPTM)
END

EXEC ADDPP 'PP01','356'
--SUA
CREATE PROC EDITPP
(
@PPCODE VARCHAR(30),
@PPNAME VARCHAR(30),
@PPTM INT
)
AS
BEGIN
UPDATE PASSPORT SET PPCODE=@PPCODE ,PPNAME = @PPNAME , PPTERMINABLE=@PPTM
END


--XOA
CREATE PROC DELPP
(
@PPCODE VARCHAR(30)
)
AS
BEGIN
DELETE FROM PASSPORT WHERE PPCODE=@PPCODE
END

--===============================================================================================================
--THEM HO CHIEU CHO CONG DAN
CREATE TABLE CZ_PP
(
	PPCODE VARCHAR(30),
	CZCODE VARCHAR(15),
	PPSTARTIME DATE ,
	PPENDTIME DATE ,
	FOREIGN KEY (CZCODE) REFERENCES CITIZEN(CZCODE),
	FOREIGN KEY (PPCODE) REFERENCES PASSPORT(PPCODE)		
)

CREATE TRIGGER NOADDPP
ON CZ_PP
FOR INSERT
AS
BEGIN
DECLARE @CZCODE VARCHAR(15) = (SELECT CZCODE FROM inserted)
DECLARE @PPCODE VARCHAR(30) = (SELECT PPCODE FROM inserted)
	IF EXISTS (SELECT @PPCODE FROM CZ_PP  WHERE CZCODE= @CZCODE )
		BEGIN
		PRINT 'ALREADY EXISTS'
		ROLLBACK TRAN
		END
END

SELECT * FROM CZ_PP

INSERT INTO CZ_PP VALUES('PP01','VN1','','')

CREATE TRIGGER ATPP
ON CZ_PP
FOR INSERT , UPDATE
AS
BEGIN
DECLARE @PPCODE VARCHAR(15) = (SELECT PPCODE FROM inserted)
DECLARE @PPTER INT = (SELECT PPTERMINABLE FROM PASSPORT WHERE PPCODE=@PPCODE )
DECLARE @CZCODE VARCHAR(15) = (SELECT CZCODE FROM inserted )
DECLARE @PPTIME DATE = (SELECT GETDATE())
DECLARE @PPTIMEE DATE = (SELECT DATEADD(D , @PPTER , @PPTIME))
UPDATE CZ_PP SET PPSTARTIME =  @PPTIME , PPENDTIME = @PPTIMEE WHERE CZCODE = @CZCODE AND PPCODE = @PPCODE 
END

INSERT INTO CZ_PP VALUES( 'PP01','VN1','','')

CREATE PROC SEARCHCP
(
@KEYSEARCH VARCHAR(30)
)
AS
BEGIN
SELECT * FROM CZ_PP
WHERE 
PPCODE LIKE '%' + @KEYSEARCH + '%' 
OR CZCODE LIKE '%' + @KEYSEARCH + '%'
END


--THEM
CREATE PROC ADDCZPP
(
	@PPCODE VARCHAR(30),
	@CZCODE VARCHAR(15),
	@PPSTARTIME DATE ,
	@PPENDTIME DATE 
)
AS
BEGIN
INSERT INTO CZ_PP VALUES (@PPCODE , @CZCODE , @PPSTARTIME , @PPENDTIME)
END

SELECT * FROM PASSPORT

EXEC ADDCZPP 'PP01','VN1','11/18/2016','11/18/2017'



--SUA
CREATE PROC EDITCZPP
(
	@PPCODE VARCHAR(30),
	@CZCODE VARCHAR(15),
	@PPSTARTIME DATE ,
	@PPENDTIME DATE 
)
AS
BEGIN
UPDATE CZ_PP SET PPCODE=@PPCODE , CZCODE = @CZCODE , PPSTARTIME = @PPSTARTIME , PPENDTIME = @PPENDTIME
END


--XOA
CREATE PROC DELCZPP
(
	@CZCODE VARCHAR(15)
)
AS
BEGIN
DELETE FROM CZ_PP WHERE CZCODE=@CZCODE
END


--===============================================================================================================
--LUONG 
CREATE TABLE SALARY 
(
	SLCODE VARCHAR(15) NOT NULL PRIMARY KEY ,
	SLNAME VARCHAR(30) UNIQUE ,
	SLMONEY INT
)

CREATE PROC SEARCHSL
(
@KEYSEARCH VARCHAR(30)
)
AS
BEGIN
SELECT * FROM SALARY
WHERE 
SLCODE LIKE '%' + @KEYSEARCH + '%' 
OR SLNAME LIKE '%' + @KEYSEARCH + '%'
END



--THEM LOAI LUONG
CREATE PROC ADDSL
(
@SLCODE VARCHAR(15) ,
@SLNAME VARCHAR(30) ,
@SLMONEY INT
)
AS
BEGIN
INSERT INTO SALARY VALUES (@SLCODE , @SLNAME , @SLMONEY)
END

EXEC ADDSL 'SL1','HUU',3000

--SUA
CREATE PROC EDITSL
(
@SLCODE VARCHAR(15) ,
@SLNAME VARCHAR(30) ,
@SLMONEY INT
)
AS
BEGIN
UPDATE SALARY SET SLCODE = @SLCODE , SLNAME = @SLNAME , SLMONEY = @SLMONEY
END


--XOA
CREATE PROC DELSL
(
@SLCODE VARCHAR(15)
)
AS
BEGIN
DELETE FROM SALARY WHERE SLCODE=@SLCODE
END
--==================================================================================================================

--THEM LUONG
CREATE TABLE CZ_SL
(
	CZCODE VARCHAR(15),
	SLCODE VARCHAR(15),
	FOREIGN KEY (CZCODE) REFERENCES CITIZEN(CZCODE),
	FOREIGN KEY (SLCODE) REFERENCES SALARY(SLCODE),	
)

CREATE TRIGGER NOADDSL
ON CZ_SL
FOR INSERT
AS
BEGIN
DECLARE @CZCODE VARCHAR(15) = (SELECT CZCODE FROM inserted)
DECLARE @SLCODE VARCHAR(30) = (SELECT SLCODE FROM inserted)
	IF EXISTS (SELECT @SLCODE FROM CZ_SL  WHERE CZCODE= @CZCODE )
		BEGIN
		PRINT 'ALREADY EXISTS'
		ROLLBACK TRAN
		END
END



CREATE PROC SEARCHCS
(
@KEYSEARCH VARCHAR(30)
)
AS
BEGIN
SELECT * FROM CZ_SL
WHERE 
SLCODE LIKE '%' + @KEYSEARCH + '%' 
OR CZCODE LIKE '%' + @KEYSEARCH + '%'
END

--THEM
CREATE PROC ADDCZSL
(
	@CZCODE VARCHAR(15),
	@SLCODE VARCHAR(15)
)
AS
BEGIN
INSERT INTO CZ_SL VALUES(@CZCODE , @SLCODE)
END

SELECT * FROM SALARY

EXEC ADDCZSL 'VN1','SL1'
				   
--SUA
CREATE PROC EDITCZSL
(
	@CZCODE VARCHAR(15),
	@SLCODE VARCHAR(15)
)
AS
BEGIN
UPDATE CZ_SL SET CZCODE=@CZCODE , SLCODE = @SLCODE
END


--XOA
CREATE PROC DELCZSL
(
	@CZCODE VARCHAR(15)
)
AS
BEGIN
DELETE FROM CZ_SL WHERE CZCODE=@CZCODE
END


--CHUC VU NGHE NGHIEP

--CREATE TABLE POSITION
--(
--	PSCODE  VARCHAR(30) NOT NULL PRIMARY KEY ,
--	PSNAME VARCHAR(30) UNIQUE ,
--	PSWORKINGPLACE VARCHAR(50),
--	CZCODE VARCHAR(15) ,
--	FOREIGN KEY (CZCODE) REFERENCES CITIZEN(CZCODE)		 
--)

--NHAT KY
CREATE TABLE DIARYTRANSACTION
(
	FRCODE VARCHAR(20) ,
	CZCODE VARCHAR(15),
	ISCODE VARCHAR(15),
	LDCODE VARCHAR(30),
	PPCODE VARCHAR(30) ,
	SLCODE VARCHAR(15) ,
	PSCODE  VARCHAR(30) ,
	TIMETRANS DATE 
)

--CHUC NANG : THEM ,  SUA ,  XOA , UPDATE , CAP LUONG , MUA BAO HIEM ,  
---TAO VIEW GIAY KHAI SINH VA IN RA , 

-------VIEW------------------




CREATE VIEW OVERVIEW
AS
SELECT CZNAME , CZSEX , CZBIRTH , CZADDRESS , POSITION ,
 ISCODE , ISSTARTIME ,ISENDTIME ,
  LDCODE , LDSTARTIME , LDENDTIME , 
  PPCODE , PPSTARTIME , PPENDTIME ,
   SLCODE
FROM CITIZEN AS C LEFT JOIN CZ_IS AS CI ON C.CZCODE = CI.CZCODE 
						   LEFT JOIN CZ_LD AS CL ON C.CZCODE = CL.CZCODE
						   LEFT JOIN CZ_PP AS CP ON C.CZCODE = CP.CZCODE
						   LEFT JOIN CZ_SL AS CS ON C.CZCODE = CS.CZCODE
						   
			   
SELECT distinct * FROM OVERVIEW	
SELECT * FROM CITIZEN 

--TRIGGER OVERVIEW


SELECT CONCAT(CZCODE ,'',CZADDRESS)  FROM CITIZEN
SELECT * FROM CZ_IS
SELECT * FROM ADMINLG
--==TINH XEM CO BAO NHIEU NGUOI CO BAO HIEM TREN TONG SO CONG DAN



SELECT COUNT(*)  AS STUDENT FROM CITIZEN WHERE POSITION = 'STUDENT'
SELECT * FROM CITIZEN

SELECT * FROM CZ_IS

SELECT COUNT(*) FROM CZ_IS WHERE ISCODE = 'IS1'
---------------------------------------------------------------------------------------------------

SELECT * FROM CITIZEN
--THONG KE THEO SO THANH VIEN TRONG GIA DINH
CREATE FUNCTION STATISTIC1(@TUKHOA VARCHAR(30))
RETURNS INT
AS
BEGIN
	DECLARE @KW VARCHAR(30) 
	SELECT @KW = COUNT(*) FROM CITIZEN WHERE FRCODE = @TUKHOA
	RETURN @KW
END

SELECT DBO.STATISTIC1('FR1') AS 'NUMBER OF FAMILYREGISTER'

--THONG KE THEO GIOI TINH

CREATE FUNCTION STATISTIC2(@TUKHOA VARCHAR(30))
RETURNS INT
AS
BEGIN
	DECLARE @KW VARCHAR(30) 
	SELECT @KW = COUNT(*) FROM CITIZEN WHERE CZSEX = @TUKHOA
	RETURN @KW
END

SELECT DBO.STATISTIC2('FAMALE') AS 'NUMBER OF SEX'

SELECT * FROM CITIZEN

---THONG KE THEO VI TRI
CREATE FUNCTION STATISTIC4(@TUKHOA VARCHAR(30))
RETURNS INT
AS
BEGIN
	DECLARE @KW VARCHAR(30) 
	SELECT @KW = COUNT(*) FROM CITIZEN WHERE POSITION = @TUKHOA
	RETURN @KW
END

SELECT DBO.STATISTIC4('STUDENT') AS 'NUMBER OF POSITION'

---THONG KE THEO VI TRI CUA NHAN VIEN

CREATE FUNCTION STATISTIC5(@TUKHOA VARCHAR(30))
RETURNS INT
AS
BEGIN
	DECLARE @KW VARCHAR(30) 
	SELECT @KW = COUNT(*) FROM MANAGER WHERE MNPOSITION = @TUKHOA
	RETURN @KW
END

SELECT DBO.STATISTIC5('NHANVIEN') AS 'NUMBER OF POSITION'

---THONG KE NGUOI CO BAO HIEM

CREATE FUNCTION STATISTIC6(@TUKHOA VARCHAR(30))
RETURNS INT
AS
BEGIN
	DECLARE @KW VARCHAR(30) 
	SELECT @KW = COUNT(*) FROM CZ_IS WHERE ISCODE = @TUKHOA
	RETURN @KW
END

SELECT * FROM CZ_IS

SELECT DBO.STATISTIC6('VN1') AS 'NUMBER OF INSURANCE'

--DEM  NGUOI CO BAO HIEM THEO LOAI
SELECT  COUNT(DISTINCT CZCODE) AS 'NUMBER BY INSURANCE'  FROM CZ_IS 
--NGUOI CO GIAY PHEP LAI XE THEO LOAI
CREATE FUNCTION STATISTIC7(@TUKHOA VARCHAR(30))
RETURNS INT
AS
BEGIN
	DECLARE @KW VARCHAR(30) 
	SELECT @KW = COUNT(*) FROM CZ_LD WHERE LDCODE = @TUKHOA
	RETURN @KW
END

SELECT DBO.STATISTIC7('') AS 'NUMBER OF LICENSEDRIVE '

--TONG SO NGUOI CO GPLX
SELECT  COUNT(DISTINCT CZCODE) AS 'NUMBER BY LICENSEDRIVE'  FROM CZ_LD 
--SI NGUOI HUONG LUONG THEO 
CREATE FUNCTION STATISTIC8(@TUKHOA VARCHAR(30))
RETURNS INT
AS
BEGIN
	DECLARE @KW VARCHAR(30) 
	SELECT @KW = COUNT(*) FROM CZ_SL WHERE SLCODE = @TUKHOA
	RETURN @KW
END

SELECT DBO.STATISTIC8('') AS 'NUMBER OF SALARY '
--TONG SO NGUOI SO LUONG
SELECT  COUNT(DISTINCT CZCODE) AS 'NUMBER BY LICENSEDRIVE'  FROM CZ_SL
--SO NGUOI CO HO CHIEU
CREATE FUNCTION STATISTIC9(@TUKHOA VARCHAR(30))
RETURNS INT
AS
BEGIN
	DECLARE @KW VARCHAR(30) 
	SELECT @KW = COUNT(*) FROM CZ_PP WHERE PPCODE = @TUKHOA
	RETURN @KW
END

SELECT DBO.STATISTIC8('') AS 'NUMBER OF PASSPORT '

--TONG SO NGUOI CO HO CHIEU

SELECT  COUNT(DISTINCT CZCODE) AS 'NUMBER BY LICENSEDRIVE'  FROM CZ_PP

-------------------------------------------------------------------------------------------
SELECT * FROM MANAGER
SELECT * FROM AREA
SELECT * FROM FAMILYREGISTER
SELECT * FROM CITIZEN 
SELECT * FROM INSURANCE
SELECT * FROM CZ_IS
SELECT * FROM CZ_LD
SELECT * FROM CZ_SL
SELECT * FROM CZ_PP

SELECT * FROM LICENSEDRIVE
SELECT * FROM PASSPORT
SELECT * FROM SALARY

SELECT COUNT(FRCODE) FROM CITIZEN AS C INNER JOIN FAMILYREGISTER AS F ON C.FRCODE = F.FRCODE WHERE FRCODE

SELECT * FROM FAMILYREGISTER AS F LEFT JOIN AREA AS A ON F.ARCODE = A.ARCODE
								  LEFT JOIN CITIZEN AS C ON C.FRCODE = F.FRCODE 
								  
CREATE VIEW VIEW1
AS 
SELECT FRNAME , ARCODE , CZCODE , CZNAME , CZSEX , CZBIRTH , CZADDRESS, POSITION 
FROM FAMILYREGISTER AS F INNER JOIN CITIZEN AS C ON F.FRCODE = C.FRCODE

CREATE VIEW VIEW2
AS
SELECT FRNAME  , CZCODE , CZNAME , CZSEX , CZBIRTH , CZADDRESS , POSITION , ARNAME
 FROM VIEW1 AS V1 INNER JOIN AREA AS A ON V1.ARCODE = A.ARCODE  
 
 SELECT * FROM VIEW2
 
 
 CREATE FUNCTION STATISTIC3(@TUKHOA VARCHAR(20) )
 RETURNS INT
 AS
 BEGIN
 DECLARE @KW VARCHAR(30) 
	SELECT @KW = COUNT(ARNAME) FROM VIEW2 WHERE ARNAME =  @TUKHOA
	RETURN @KW
 END
 
 SELECT DBO.STATISTIC3('2') AS 'NUMBER OF AREA'
 